{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Импорт iziToast\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\n\n// Опции\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    chekDate();  \n  },\n  onOpen(){clearInterval(reIn)},\n};\n\n//Проверка даты-----------------------------------\nfunction chekDate() {\n  if (userSelectedDate <= new Date()) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n      progressBar: false,\n      transitionIn: 'fadeIn', \n      position: 'topRight', \n      animateInside: false,\n    });\n    userSelectedDate = null;\n    btn.disabled = true;\n    startTimeUpdate();\n  } else {\n    btn.disabled = false;\n  }\n}\n\n// Функция для запуска обновления времени\nfunction startTimeUpdate() {\n  if (fp) {\n    fp.destroy(); // Уничтожаем текущий экземпляр\n  }\n  options.defaultDate = new Date();\n  fp = flatpickr(\"#datetime-picker\", options);\n  reIn = setInterval(() => {\n    if (fp) fp.destroy();\n    options.defaultDate = new Date();\n    fp = flatpickr(\"#datetime-picker\", options);\n  }, 300);\n}\n\n// Инициализация с обновлением времени\nlet fp = null; \nlet reIn = null; // Используем let для возможности очистки\nstartTimeUpdate(); // Вызываем функцию для начальной инициализации\n\n// Добавление нуля\nfunction addZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// Подсчет------------------------------------\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n//------------------------------------------------------   \n\nconst btn = document.querySelector(\"button[data-start]\");\n\nconst daysV = document.querySelector('[data-days]');\nconst hoursV = document.querySelector('[data-hours]');\nconst minutesV = document.querySelector('[data-minutes]');\nconst secondsV = document.querySelector('[data-seconds]');\nconst datePicker = document.getElementById('datetime-picker');\n\n// Обработчик нажатия\nbtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  btn.disabled = true;\n  datePicker.disabled = true;\n\n// Счетчик\n  const interval = setInterval(() => {\n    const deltaTime = userSelectedDate - new Date();\n\n    if (deltaTime <= 0) {\n      clearInterval(interval);\n      daysV.textContent = \"00\";\n      hoursV.textContent = \"00\";\n      minutesV.textContent = \"00\";\n      secondsV.textContent = \"00\";\n      datePicker.disabled = false; // Активен после остановки\n      // Перезапуск динамического обновления времени\n      startTimeUpdate(); // Вызываем функцию для перезапуска\n      return;\n    }\n\n    // Отображение\n    const { days, hours, minutes, seconds } = convertMs(deltaTime);\n    daysV.textContent = addZero(days);\n    hoursV.textContent = addZero(hours);\n    minutesV.textContent = addZero(minutes);\n    secondsV.textContent = addZero(seconds);\n  }, 1000);\n});"],"names":["userSelectedDate","options","selectedDates","chekDate","reIn","iziToast","btn","startTimeUpdate","fp","flatpickr","addZero","value","convertMs","ms","days","hours","minutes","seconds","daysV","hoursV","minutesV","secondsV","datePicker","interval","deltaTime"],"mappings":"sFAUA,IAAIA,EAAmB,KAGvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClCC,GACD,EACD,QAAQ,CAAC,cAAcC,CAAI,CAAC,CAC9B,EAGA,SAASD,GAAW,CACdH,GAAoB,IAAI,MAC1BK,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,YAAa,GACb,aAAc,SACd,SAAU,WACV,cAAe,EACrB,CAAK,EACDL,EAAmB,KACnBM,EAAI,SAAW,GACfC,KAEAD,EAAI,SAAW,EAEnB,CAGA,SAASC,GAAkB,CACrBC,GACFA,EAAG,QAAO,EAEZP,EAAQ,YAAc,IAAI,KAC1BO,EAAKC,EAAU,mBAAoBR,CAAO,EAC1CG,EAAO,YAAY,IAAM,CACnBI,GAAIA,EAAG,UACXP,EAAQ,YAAc,IAAI,KAC1BO,EAAKC,EAAU,mBAAoBR,CAAO,CAC3C,EAAE,GAAG,CACR,CAGA,IAAIO,EAAK,KACLJ,EAAO,KACXG,IAGA,SAASG,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAIA,MAAMX,EAAM,SAAS,cAAc,oBAAoB,EAEjDY,EAAQ,SAAS,cAAc,aAAa,EAC5CC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAW,SAAS,cAAc,gBAAgB,EAClDC,EAAW,SAAS,cAAc,gBAAgB,EAClDC,EAAa,SAAS,eAAe,iBAAiB,EAG5DhB,EAAI,iBAAiB,QAAS,IAAM,CAClC,GAAI,CAACN,EAAkB,OAEvBM,EAAI,SAAW,GACfgB,EAAW,SAAW,GAGtB,MAAMC,EAAW,YAAY,IAAM,CACjC,MAAMC,EAAYxB,EAAmB,IAAI,KAEzC,GAAIwB,GAAa,EAAG,CAClB,cAAcD,CAAQ,EACtBL,EAAM,YAAc,KACpBC,EAAO,YAAc,KACrBC,EAAS,YAAc,KACvBC,EAAS,YAAc,KACvBC,EAAW,SAAW,GAEtBf,IACA,MACD,CAGD,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUY,CAAS,EAC7DN,EAAM,YAAcR,EAAQI,CAAI,EAChCK,EAAO,YAAcT,EAAQK,CAAK,EAClCK,EAAS,YAAcV,EAAQM,CAAO,EACtCK,EAAS,YAAcX,EAAQO,CAAO,CACvC,EAAE,GAAI,CACT,CAAC"}